[gd_resource type="ShaderMaterial" load_steps=17 format=2]

[ext_resource path="res://noise.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=5]
operator = 9

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeColorConstant" id=8]
constant = Color( 0.257712, 0.0377226, 0.0377226, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=9]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeTexture" id=10]
source = 2

[sub_resource type="VisualShaderNodeColorOp" id=11]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "uv"

[sub_resource type="VisualShader" id=15]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// Color:17
	vec3 n_out17p0 = vec3(0.257712, 0.037723, 0.037723);
	float n_out17p1 = 1.000000;

// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out7p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Input:11
	float n_out11p0 = TIME;

// ScalarFunc:12
	float n_out12p0 = sin(n_out11p0);

// ScalarFunc:13
	float n_out13p0 = abs(n_out12p0);

// ScalarOp:10
	float n_out10p0 = step(dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333)), n_out13p0);

// ScalarOp:15
	float n_in15p1 = 1.00000;
	float n_out15p0 = n_out13p0 - n_in15p1;

// ScalarOp:14
	float n_out14p0 = step(dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333)), n_out15p0);

// ScalarOp:16
	float n_out16p0 = n_out10p0 - n_out14p0;

// VectorOp:19
	vec3 n_out19p0 = n_out17p0 - vec3(n_out16p0);

// ColorOp:20
	vec3 n_out20p0 = vec3(1.0) - (vec3(1.0) - n_out2p0) * (vec3(1.0) - n_out19p0);

// Output:0
	COLOR.rgb = n_out20p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 215.528, 677.026 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 740, 100 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( 280, 220 )
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( 60, 240 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( 80, 440 )
nodes/fragment/7/node = SubResource( 14 )
nodes/fragment/7/position = Vector2( -140, 480 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 360, 580 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -160, 740 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 0, 740 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 180, 740 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 600, 760 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 441, 847 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 880, 660 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 980, 1000 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 1120, 500 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 520, 200 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 7, 0, 4, 0, 4, 0, 10, 0, 11, 0, 12, 0, 12, 0, 13, 0, 13, 0, 10, 1, 4, 0, 14, 0, 13, 0, 15, 0, 15, 0, 14, 1, 10, 0, 16, 0, 14, 0, 16, 1, 2, 0, 20, 0, 20, 0, 0, 0, 19, 0, 20, 1, 2, 1, 0, 1, 17, 0, 19, 0, 16, 0, 19, 1 )

[resource]
shader = SubResource( 15 )
